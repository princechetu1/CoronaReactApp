{"version":3,"sources":["Components/Header.js","Components/HighLevelStatus.js","Actions/index.js","Components/TableWithWorldData.js","Components/TableWithIndiaData.js","Components/PDFDetailView.js","Components/ChartViewForIndiaData.js","Components/ChartViewForWorldData.js","Components/OverViewPage.js","Components/TableContent.js","Components/DetailedComponent.js","Components/Footer.js","Containers/App.js","serviceWorker.js","Reducers/CountriesData.js","Reducers/PDFData.js","Reducers/index.js","Actions/CountriesDataAction.js","Helpers/axiosHelper.js","index.js"],"names":["Header","className","style","textAlign","Component","TitleValues","this","props","getInidaHighLevelAsync","title","countriesData","IndianData","cases","todayCases","mapDispatchToProps","type","connect","state","countries","Countriescolumns","name","selector","sortable","fontStyle","color","fontSize","center","customStyles","rows","minHeight","headCells","paddingLeft","paddingRight","cells","TableWithWorldData","getCountriesDataAsync","columns","data","pagination","paginationPerPage","Statecolumns","TableWithIndiaData","getInidaDataAsync","IndiaStateData","PDFDetailView","watchPDFAction","backgroundColor","PDFLinks","map","k","target","href","link","ChartViewForIndiaData","chartValues","values","find","x","country","Object","keys","length","v","obj","push","setState","class","value","ChartViewForWorldData","OverViewPage","TableContent","path","component","exact","from","to","DetailedComponent","Footer","App","Boolean","window","location","hostname","match","initalState","rootReducers","combineReducers","action","newState","getHTMLContent","getAllPdfLinksFromPage","watchCountrieData","rootSaga","fetch","then","res","json","put","fetchHTML","userId","url","options","axios","apiServices","isPdfLink","slice","call","html","$","cheerio","load","returnData","children","each","_","element","perStateData","i","row","text","trim","allMenuLinks","newDocumentPdfLinks","button","attr","page","allPdfLinksOnPage","linkAttr","linkTitle","console","log","takeEvery","all","sagaMiddleware","ReduxSagaMiddleware","store","createStore","reducers","applyMiddleware","run","ReactDOM","render","document","querySelector","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.d0005b58.chunk.js","sourcesContent":["\r\nimport React, {Component } from 'react';\r\n\r\nexport default class Header extends Component {\r\n    render() {\r\n        return (\r\n            <div className='headerStyle shadow-lg p-3 mb-2 bg-white rounded'>\r\n                <h2>{'Corona Virus Details '}</h2>\r\n                <h5 className='row'>\r\n                    <div className='col-6'>\r\n                        {'Helpline Number Toll free: 1075, +91-11-23978046'}\r\n                    </div>\r\n                    <div className='col-6' style={{textAlign:'end'}}>\r\n                        {'Helpline Email ID :  ncov2019.gov.in OR ncov2019.gmail.com'}\r\n                    </div>\r\n                </h5>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, {Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { getInidaHighLevelAsync } from  '../Actions/index';\r\n\r\n class TitleValues extends Component {\r\n    componentWillMount(){\r\n        this.props.getInidaHighLevelAsync();\r\n    }\r\n    render() {\r\n        return (\r\n            <div className='row TitleValuesStyle'>\r\n               <div className='col-3'>\r\n                 <label title={'Cases ' + this.props.countriesData?.IndianData?.cases }/>\r\n                 <label title={'Todays Cases '+this.props.countriesData?.IndianData?.todayCases }/>\r\n               </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    countriesData: state.countries,\r\n    })\r\n\r\nconst mapDispatchToProps = {\r\n    getInidaHighLevelAsync: getInidaHighLevelAsync\r\n};\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(TitleValues)","\r\nexport const getCountriesDataAsync = () => ({\r\n    type: 'GET_COUNTRIES_DATA',\r\n});\r\n\r\nexport const getInidaHighLevelAsync = () => ({\r\n    type: 'GET_INDIA_HUGH_LEVEL_DATA',\r\n});\r\n\r\nexport const getInidaDataAsync = () => ({\r\n    type: 'GET_INDIA_DATA',\r\n});\r\n\r\nexport const watchPDFAction = () => ({\r\n    type: 'GET_ALL_PDF',\r\n});","\r\nimport React, {Component } from 'react';\r\nimport DataTable, { createTheme } from 'react-data-table-component';\r\nimport { connect } from 'react-redux';\r\nimport { getCountriesDataAsync } from  '../Actions/index';\r\n\r\nconst Countriescolumns = [\r\n    {\r\n      name: 'Country',\r\n      selector: 'country',\r\n      sortable: true,\r\n      style: {\r\n        fontStyle:'Bold',\r\n        color:'Black',\r\n        fontSize:24\r\n  \r\n      },\r\n    },\r\n    {\r\n      name: 'Cases',\r\n      selector: 'cases',\r\n      sortable: true,\r\n      center: true,\r\n      style: {\r\n        fontStyle:'Bold',\r\n        color:'Orange',\r\n        fontSize:24\r\n  \r\n      },\r\n    \r\n    },\r\n    {\r\n        name: 'TodayCases',\r\n        selector: 'todayCases',\r\n        sortable: true,\r\n        center: true,\r\n        style: {\r\n          fontStyle:'Bold',\r\n          color:'Orange',\r\n          fontSize:24\r\n    \r\n        },\r\n      \r\n      },\r\n      {\r\n        name: 'Deaths',\r\n        selector: 'deaths',\r\n        sortable: true,\r\n        center: true,\r\n        style: {\r\n          fontStyle:'Bold',\r\n          color:'Red',\r\n          fontSize:24\r\n    \r\n        },\r\n      \r\n      },\r\n      {\r\n        name: 'TodayDeaths',\r\n        selector: 'todayDeaths',\r\n        sortable: true,\r\n        center: true,\r\n        style: {\r\n          fontStyle:'Bold',\r\n          color:'Red',\r\n          fontSize:24\r\n    \r\n        },\r\n      \r\n      },\r\n      {\r\n        name: 'Recovered',\r\n        selector: 'recovered',\r\n        sortable: true,\r\n        center: true,\r\n        style: {\r\n          fontStyle:'Bold',\r\n          color:'DarkGreen',\r\n          fontSize:24\r\n    \r\n        },\r\n      \r\n      },\r\n      {\r\n        name: 'Active',\r\n        selector: 'active',\r\n        sortable: true,\r\n        center: true,\r\n        style: {\r\n          fontStyle:'Bold',\r\n          color:'Orange',\r\n          fontSize:24\r\n    \r\n        },\r\n      \r\n      },\r\n      {\r\n        name: 'Critical',\r\n        selector: 'critical',\r\n        sortable: true,\r\n        center: true,\r\n        style: {\r\n          fontStyle:'Bold',\r\n          color:'red',\r\n          fontSize:24\r\n    \r\n        },\r\n      \r\n      },\r\n      {\r\n        name: 'CasesPerOneMillion',\r\n        selector: 'casesPerOneMillion',\r\n        sortable: true,\r\n        center: true,\r\n        style: {\r\n          fontStyle:'Bold',\r\n          color:'red',\r\n          fontSize:24\r\n    \r\n        },\r\n      \r\n      }\r\n\r\n  ];\r\n\r\nconst customStyles = {\r\n    rows: {\r\n      style: {\r\n        minHeight: '30px', // override the row height\r\n      }\r\n    },\r\n    headCells: {\r\n      style: {\r\n        paddingLeft: '8px', // override the cell padding for head cells\r\n        paddingRight: '8px',\r\n        fontSize:24\r\n      },\r\n    },\r\n    cells: {\r\n      style: {\r\n        paddingLeft: '8px', // override the cell padding for data cells\r\n        paddingRight: '8px',\r\n      },\r\n    },\r\n  };\r\n\r\nclass TableWithWorldData extends Component {\r\n    componentWillMount(){\r\n        this.props.getCountriesDataAsync();\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                 <DataTable\r\n                    columns={Countriescolumns}\r\n                    data={this.props.countriesData.data}\r\n                    title={'World Details'}\r\n                    pagination\r\n                    paginationPerPage=\"7\"\r\n                    customStyles={customStyles}\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    countriesData: state.countries,\r\n    })\r\n\r\nconst mapDispatchToProps = {\r\n    getCountriesDataAsync: getCountriesDataAsync\r\n};\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(TableWithWorldData)\r\n\r\n","\r\nimport React, {Component } from 'react';\r\nimport DataTable, { createTheme } from 'react-data-table-component';\r\nimport { connect } from 'react-redux';\r\nimport { getInidaDataAsync } from  '../Actions/index';\r\nimport { withTheme } from 'styled-components';\r\n\r\nconst Statecolumns = [\r\n  {\r\n    name: 'State Name',\r\n    selector: 'State_Name',\r\n    sortable: true,\r\n    style: {\r\n      fontStyle:'Bold',\r\n      color:'Black',\r\n      fontSize:24\r\n\r\n    }\r\n  },\r\n  {\r\n    name: 'Total Confirmed cases(Indian National)',\r\n    selector: 'Total_Confirmed_cases_Indian_National',\r\n    sortable: true,\r\n    center: true,\r\n    style: {\r\n      fontStyle:'Bold',\r\n      color:'Orange',\r\n      fontSize:24\r\n\r\n    }\r\n  },\r\n  {\r\n    name: 'Total Confirmed cases(Foreign National)',\r\n    selector: 'Total_Confirmed_cases_Foreign_National',\r\n    sortable: true,\r\n    center: true,\r\n    style: {\r\n      fontStyle:'Bold',\r\n      color:'DarkYellow',\r\n      fontSize:24\r\n\r\n    }\r\n  },\r\n  {\r\n    name: 'Cured/Discharged/Migrated',\r\n    selector: 'Cured_Discharged_Migrated',\r\n    sortable: true,\r\n    center: true,\r\n    style: {\r\n      fontStyle:'Bold',\r\n      color:'green',\r\n      fontSize:24\r\n\r\n    }\r\n  },\r\n  {\r\n    name: 'Death',\r\n    selector: 'Death',\r\n    sortable: true,\r\n    center: true,\r\n    style: {\r\n      fontStyle:'Bold',\r\n      color:'red',\r\n      fontSize:24\r\n\r\n    },\r\n  },\r\n];\r\n\r\n\r\nconst customStyles = {\r\n    rows: {\r\n      style: {\r\n        minHeight: '30px', // override the row height\r\n      }\r\n    },\r\n    headCells: {\r\n      style: {\r\n        paddingLeft: '8px', // override the cell padding for head cells\r\n        paddingRight: '8px',\r\n        fontSize:20\r\n      },\r\n    },\r\n    cells: {\r\n      style: {\r\n        paddingLeft: '8px', // override the cell padding for data cells\r\n        paddingRight: '8px',\r\n      },\r\n    },\r\n  };\r\n\r\n class TableWithIndiaData extends Component {\r\n  componentWillMount(){\r\n    this.props.getInidaDataAsync();\r\n}\r\n    render() {\r\n        return (\r\n            <div>\r\n                 <DataTable\r\n                 data={this.props.countriesData.IndiaStateData}\r\n                    columns={Statecolumns}\r\n                    title={'Indian State Details'}\r\n                    pagination\r\n                    paginationPerPage=\"7\"\r\n                    customStyles={customStyles}\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  countriesData: state.countries,\r\n  })\r\n\r\nconst mapDispatchToProps = {\r\n  getInidaDataAsync: getInidaDataAsync\r\n};\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(TableWithIndiaData)\r\n\r\n","\r\nimport React, {Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { watchPDFAction } from  '../Actions/index';\r\n\r\nclass PDFDetailView extends Component {\r\n    componentWillMount(){\r\n        this.props.watchPDFAction();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div style={{backgroundColor:'white'}}>\r\n               {this.props.PDFLinks.data.map((k) =>{\r\n                  return <div><a target='_blank' href={k.link}>{k.title}</a><br/></div>\r\n               })}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    PDFLinks: state.PDFLinks,\r\n    })\r\n  \r\n  const mapDispatchToProps = {\r\n    watchPDFAction: watchPDFAction\r\n  };\r\n  \r\n  export default connect(mapStateToProps,mapDispatchToProps)(PDFDetailView)","\r\nimport React, {Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nclass ChartViewForIndiaData extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state ={\r\n            chartValues : []\r\n        };\r\n    }\r\n    componentWillMount(){\r\n        var values = [];\r\n        var data = this.props.countriesData.data.find(x => x.country == \"India\");\r\n        if(data && Object.keys(data).length > 0 ){\r\n\r\n            Object.keys(data).map((k,v) => {\r\n                var obj ={\r\n                    \"value\":v,\r\n                    \"name\":k\r\n                };\r\n                values.push(obj);\r\n            });\r\n    \r\n            this.setState({\r\n                chartValues :values\r\n            });\r\n        }\r\n    }\r\n    render() {\r\n        return (\r\n            <div className='headerStyle shadow-lg p-3 mb-2 bg-white rounded'>\r\n            {this.state.chartValues.map((k,v) => {\r\n                return <div>\r\n                    <div class=\"card\">\r\n                                <div class=\"card-header\">{k.name}</div>\r\n                                <div class=\"card-body\">{k.value}</div>\r\n                            </div>\r\n                </div>\r\n\r\n            })\r\n            }\r\n    </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    countriesData: state.countries,\r\n});\r\n\r\nexport default connect(mapStateToProps,'')(ChartViewForIndiaData);\r\n","\r\nimport React, {Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nclass ChartViewForWorldData extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state ={\r\n            chartValues : []\r\n        };\r\n    }\r\n    componentWillMount(){\r\n        var values = [];\r\n        var data = this.props.countriesData.data.find(x => x.country == \"India\");\r\n        if(data && Object.keys(data).length > 0 ){\r\n\r\n            Object.keys(data).map((k,v) => {\r\n                var obj ={\r\n                    \"value\":v,\r\n                    \"name\":k\r\n                };\r\n                values.push(obj);\r\n            });\r\n    \r\n            this.setState({\r\n                chartValues :values\r\n            });\r\n        }\r\n    }\r\n    render() {\r\n        return (\r\n            <div className='headerStyle shadow-lg p-3 mb-2 bg-white rounded'>\r\n                    {this.state.chartValues.map((k,v) => {\r\n                        return <div>\r\n                            <div class=\"card\">\r\n                                <div class=\"card-header\">{k.name}</div>\r\n                                <div class=\"card-body\">{k.value}</div>\r\n                            </div>\r\n                        </div>\r\n\r\n                    })\r\n                    }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    countriesData: state.countries,\r\n});\r\n\r\nexport default connect(mapStateToProps,'')(ChartViewForWorldData);\r\n  \r\n","\r\nimport React, {Component } from 'react';\r\nimport ChartViewForIndiaData from './ChartViewForIndiaData';\r\nimport ChartViewForWorldData from './ChartViewForWorldData';\r\n\r\nexport default class OverViewPage extends Component {\r\n    render() {\r\n        return (\r\n            <div className='row'>\r\n                <div className='col-6'>\r\n                    <ChartViewForWorldData />\r\n                </div>\r\n                <div className='col-6'>\r\n                    <ChartViewForIndiaData />\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react';\r\nimport { Route, Switch, Redirect } from 'react-router-dom';\r\nimport TableWithWorldData from './TableWithWorldData';\r\nimport TableWithIndiaData from './TableWithIndiaData';\r\nimport PDFDetailView from './PDFDetailView';\r\nimport OverViewPage from './OverViewPage';\r\n\r\n\r\nexport default class TableContent extends Component {\r\n    render() {\r\n        return (\r\n                    <Switch>\r\n                        <Route path='/graph' component={OverViewPage} />\r\n                        <Route path='/world' component={TableWithWorldData} />\r\n                        <Route path='/India' component={TableWithIndiaData} />\r\n                        <Route path='/pdflinks' component={PDFDetailView} />\r\n                        <Redirect exact={true} from='/' to='/world' />\r\n                    </Switch>\r\n        )\r\n    }\r\n}","\r\nimport React, {Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport TableContent from './TableContent';\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport default class DetailedComponent extends Component {\r\n  \r\n     render() {\r\n        return (\r\n            <div className='row detailedStyle'>\r\n\r\n<div className='col-12 '>\r\n                <ul>\r\n                <li className=\"list-group-item\">\r\n                        <Link to='/graph'> {'OverView'}  </Link>\r\n                    </li>\r\n                    <li className=\"list-group-item\">\r\n                        <Link to='/world'> {'World'}  </Link>\r\n                    </li>\r\n                                \r\n                    <li className=\"list-group-item\">\r\n                        <Link to='/India'>\r\n                                {'India'}\r\n                        </Link>\r\n                    </li>     \r\n                    <li className=\"list-group-item\">\r\n                        <Link to='/pdflinks'> {'Latest Article by Govt.'}  </Link>\r\n                    </li>  \r\n                        </ul>\r\n                </div>\r\n                <div className='col-12 detailsBlock shadow p-3 mb-5 bg-white rounded'>\r\n                    <TableContent />\r\n                </div>\r\n                   \r\n            </div>\r\n        )\r\n    }\r\n}\r\n","\r\nimport React, {Component } from 'react';\r\n\r\nexport default class Footer extends Component {\r\n    render() {\r\n        return (\r\n            <div className='footerStyle'>\r\n                <h3>{'Developed and Designed by Chetan Patil<Chetanpatil712@gmail.com>'}</h3>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react';\r\nimport '../Style/style.css';\r\nimport Header from '../Components/Header';\r\nimport TitleValues from '../Components/HighLevelStatus';\r\nimport DetailedComponent from '../Components/DetailedComponent';\r\nimport Footer from '../Components/Footer'; \r\nimport { BrowserRouter as Router } from 'react-router-dom';\r\n\r\n\r\nexport default class App extends Component {\r\n   \r\n    render() {\r\n        return  (\r\n            <Router>\r\n                    <div>\r\n                        <div className='row'>\r\n                            <div className='col'>\r\n                            <Header />\r\n                            </div>\r\n                        </div>\r\n                        <div className='row'>\r\n                            <div className='col-12'>\r\n                                <DetailedComponent />\r\n                            </div>\r\n                        </div>\r\n                        <div className='row'>\r\n                            <div className='col-12'>\r\n                                <Footer />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n            </Router>\r\n        );\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","const initalState = {\r\n    data : [],\r\n    IndianData:{},\r\n    IndiaStateData:[]\r\n};\r\n\r\nexport default (state=initalState,action) => {\r\n    const newState = {...state};\r\n    switch(action.type){\r\n        case 'DATA_COMPLETED':\r\n                newState.data = action.value;\r\n        return newState;\r\n        case 'INDIA_DATA_COMPLETED':\r\n            newState.IndianData = action.value;\r\n            return newState;\r\n        case 'INDIA_STATE_DATA_COMPLETED':\r\n            newState.IndiaStateData = action.value;\r\n            return newState;\r\n            \r\n        default:\r\n            return initalState;\r\n    }\r\n    return state;\r\n}","const initalState = {\r\n    data : []\r\n};\r\n\r\nexport default (state=initalState,action) => {\r\n    const newState = {...state};\r\n    switch(action.type){\r\n        case 'PDF_FETCH_COMPLETED':\r\n                newState.data = action.value;\r\n        return newState;            \r\n        default:\r\n            return initalState;\r\n    }\r\n    return state;\r\n}","import { combineReducers } from 'redux';\r\nimport countriesData from './CountriesData';\r\nimport PDFLinks from './PDFData';\r\n\r\nconst rootReducers = combineReducers({\r\n    countries:countriesData,\r\n    PDFLinks:PDFLinks\r\n});\r\n\r\nexport default rootReducers;","import { takeEvery, put, all,call  } from 'redux-saga/effects';\r\nimport cheerio from 'cheerio';\r\nimport * as apiServices from '../Helpers/axiosHelper';\r\n\r\nfunction*  getCountriesDataAsync() {\r\n    const data = yield fetch( \"https://corona.lmao.ninja/countries\")\r\n    .then(res => res.json(), );\r\n    yield put({type:'DATA_COMPLETED', value:data });\r\n}\r\n\r\nfunction*  getInidaHighLevelAsync() {\r\n    const data = yield fetch( \"https://corona.lmao.ninja/countries/india\")\r\n    .then(res => res.json(), );\r\n    yield put({type:'INDIA_DATA_COMPLETED', value:data });\r\n}\r\n\r\nexport function fetchHTML(userId) {\r\n    return apiServices.getRequest('https://www.mohfw.gov.in/');\r\n  };\r\n\r\n  const isPdfLink = (link) => {\r\n    return link.slice(link.length - 4) === '.pdf' || link.slice(link.length - 3) === '.PDF'\r\n}\r\n\r\nfunction*  getInidaDataAsync() {\r\n    const html = yield call(fetchHTML, \"\");\r\n    const $ = cheerio.load(html.data)\r\n    const returnData = [];\r\n    const tableBody = $('div.content div.table-responsive table tbody')\r\n    \r\n    tableBody.children().each((_, element) => {\r\n        const perStateData = []\r\n        const rows = $(element).find('td')\r\n\r\n        if(rows.length === 5) {\r\n            perStateData.push(\"Total number of confirmed cases in India\")\r\n        }\r\n        rows.each((i, row) => {\r\n            if(i !== 0) {\r\n                perStateData.push($(row).text().trim())\r\n            } \r\n        })\r\n        var obj = {\r\n            'State_Name':perStateData[0],\r\n            'Total_Confirmed_cases_Indian_National':perStateData[1],\r\n            'Total_Confirmed_cases_Foreign_National':perStateData[2],\r\n            'Cured_Discharged_Migrated':perStateData[3],\r\n            'Death':perStateData[4]\r\n        }\r\n\r\n        returnData.push(obj);\r\n    });\r\n\r\n    yield put({type:'INDIA_STATE_DATA_COMPLETED', value:returnData });\r\n}\r\n\r\n\r\nfunction* getHTMLContent() {\r\n    const html = yield call(fetchHTML, \"\");\r\n    const $ = cheerio.load(html.data)\r\n    const returnData = [];\r\n    let allMenuLinks = [];\r\n    let newDocumentPdfLinks = [];\r\n\r\n        $('.menu .menu-ee .dropdown').each((_, button) => {\r\n            allMenuLinks.push($(button).find('.dropbtn a').attr('href'))\r\n        });\r\n\r\n        for(let page of allMenuLinks) {\r\n            const allPdfLinksOnPage = yield call(getAllPdfLinksFromPage, page);\r\n            \r\n            newDocumentPdfLinks.push(...allPdfLinksOnPage)\r\n        }\r\n\r\n        yield put({type:'PDF_FETCH_COMPLETED', value:newDocumentPdfLinks });\r\n}\r\n\r\nexport function* getAllPdfLinksFromPage(page) {\r\n    try {\r\n        const html = yield call(fetchHTML , page);\r\n\r\n        const $ = cheerio.load(html.data)\r\n\r\n        let allPdfLinksOnPage = [];\r\n\r\n        $('a').each((_ ,link) => {\r\n            const linkAttr = $(link).attr('href')\r\n            if(isPdfLink(linkAttr)) {\r\n                const linkTitle = $(link).text().trim()\r\n\r\n                allPdfLinksOnPage.push({\r\n                    link: linkAttr,\r\n                    title: linkTitle\r\n                })\r\n            }\r\n        })\r\n\r\n        return allPdfLinksOnPage\r\n\r\n    } catch(e) {\r\n        console.log(\"error getting links from the page: \", page)\r\n        console.log(e)\r\n        return []\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport function* watchCountrieData() {\r\n\r\n    yield takeEvery('GET_COUNTRIES_DATA', getCountriesDataAsync);\r\n\r\n    yield takeEvery('GET_INDIA_HUGH_LEVEL_DATA', getInidaHighLevelAsync);\r\n\r\n    yield takeEvery('GET_INDIA_DATA', getInidaDataAsync);\r\n    yield takeEvery('GET_ALL_PDF', getHTMLContent);\r\n   \r\n\r\n} \r\n\r\nexport function* rootSaga() {\r\n    yield all([\r\n        watchCountrieData()\r\n    ]);\r\n }","\r\nimport axios from 'axios';\r\n\r\nexport const getRequest = ( url) => {\r\n\tconst options = {\r\n\t\turl\r\n\t};\r\n\treturn axios(options);\r\n};","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './Containers/App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport reducers from './Reducers/index';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware  } from 'redux';\nimport ReduxSagaMiddleware from 'redux-saga';\nimport { rootSaga } from './Actions/CountriesDataAction';\n\nconst sagaMiddleware = ReduxSagaMiddleware();\n\nconst store = createStore(reducers,  applyMiddleware(sagaMiddleware));\nsagaMiddleware.run(rootSaga);\n\nReactDOM.render(\n  <Provider store={store}>\n\t\t<App /></Provider>,\n\tdocument.querySelector('#root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}